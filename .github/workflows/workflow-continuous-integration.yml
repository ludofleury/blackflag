name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}

      - name: Build & push
        uses: docker/build-push-action@v2
        with:
          context: ./php/
          file: ./php/Dockerfile
          target: test
          tags: ludofleury/blackflag-php:test
          cache-from: type=registry,ref=ludofleury/blackflag-php:test
          cache-to: type=inline
          push: true
  
  test:
    name: test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create reports directory
        run: mkdir ${{github.workspace}}/reports

      - name: Pull docker test image
        run: docker pull ludofleury/blackflag-php:test

      - name: Execute tests
        run: docker run -v ${{github.workspace}}/reports:/var/app/reports ludofleury/blackflag-php:test vendor/bin/phpunit -c phpunit.xml.dist

      - name: Archive tests reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports
      
      - name: reports
        uses: codecov/codecov-action@v1
        with:
          file: ${{github.workspace}}/reports/test/coverage/clover.xml
          flags: unit-tests
          fail_ci_if_error: true
          verbose: false
      
      # - name: Publish coverage to codecov
      #   run: if [ -z "${{ github.event.pull_request.number }}" ]; then bash <(curl -s https://codecov.io/bash) -s ${{github.workspace}}/reports/ -Z; exit $?; else bash <(curl -s https://codecov.io/bash) -s ${{github.workspace}}/reports/ -P ${{ github.event.pull_request.number }} -Z; exit $?; fi