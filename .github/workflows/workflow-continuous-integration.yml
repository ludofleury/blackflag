name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - uses: actions/checkout@v2

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}

      - name: build & push test image
        uses: docker/build-push-action@v2
        with:
          context: ./php/
          file: ./php/Dockerfile
          target: test
          tags: ludofleury/blackflag-php:test
          cache-from: type=registry,ref=ludofleury/blackflag-php:test
          cache-to: type=inline
          push: true
  
  test:
    name: test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2 # required for codecov

      - name: create reports directory
        run: mkdir ${{github.workspace}}/reports

      - name: pull docker test image
        run: docker pull ludofleury/blackflag-php:test

      - name: execute tests
        run: docker run -v ${{github.workspace}}/reports:/var/app/reports --env XDEBUG_MODE=coverage ludofleury/blackflag-php:test vendor/bin/phpunit -c phpunit.xml.dist --printer mheap\\GithubActionsReporter\\Printer |  docker run -i ludofleury/blackflag-php:test vendor/bin/github-annotation-mapper php/

      - name: archive tests reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports
      
      - name: publish reports
        uses: codecov/codecov-action@v1
        with:
          file: ${{github.workspace}}/reports/test/clover.xml
          flags: unit-tests
          fail_ci_if_error: true
          verbose: false

  mutation:
    name: mutation test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: create reports directory
        run: mkdir ${{github.workspace}}/reports

      - name: pull docker test image
        run: docker pull ludofleury/blackflag-php:test

      - name: infection mutation
        run: docker run --env XDEBUG_MODE=coverage --env CI=true ludofleury/blackflag-php:test vendor/bin/infection --no-progress --min-covered-msi=90 --min-msi=80 --logger-github |  sed -En "s/file=/file=php\//p"

  qa:
    name: analyse
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: pull docker test image
        run: docker pull ludofleury/blackflag-php:test

      - name: phpstan analyse
        run:  docker run -v ${{github.workspace}}/reports:/var/app/reports ludofleury/blackflag-php:test vendor/bin/phpstan analyse --no-progress --error-format github |  docker run -i ludofleury/blackflag-php:test vendor/bin/github-annotation-mapper php/

      - name: psalm analyse
        run:  docker run -v ${{github.workspace}}/reports:/var/app/reports ludofleury/blackflag-php:test vendor/bin/psalm --output-format=github |  docker run -i ludofleury/blackflag-php:test vendor/bin/github-annotation-mapper php/